---
//@ts-nocheck

import { Image } from 'astro:assets';

import { contentfulClient } from '../../lib/contentful';
import type { Project } from '../../lib/contentful';
import { documentToHtmlString } from '@contentful/rich-text-html-renderer';
import { BLOCKS } from '@contentful/rich-text-types';

let lowerContent;

const { slug } = Astro.params;

const options = {
  preserveWhitespace: true,
  renderNode: {
    // Render the embedded images with all the custom styling options
    [BLOCKS.EMBEDDED_ASSET]: ({
      data: {
        target: { fields },
      },
    }) =>
      `<img class="blurry-load" style="margin: 10px 10px 10px 0px; border-radius: 3px;" src="https://${fields.file.url}?fm=webp&w=10&h=10&q=5" data-large=https://${fields.file.url}?fm=webp&w=1920&h=1080&q=35&fit=pad width="40%" height="auto" alt="${fields.description}"/>`,
    // Render the text of the paragraph in a justified way
    [BLOCKS.PARAGRAPH]: (node, next) =>
      `<p style="text-align: justify";>${next(node.content)}</p>`,
  },
};

try {
  const data = await contentfulClient.getEntries<Project>({
    content_type: 'project',
    'fields.slug': slug,
    select: 'sys.id,fields.content,fields.gallery',
  });
  const { content, gallery } = data.items[0].fields;
  lowerContent = {
    content: documentToHtmlString(content, options),
    gallery,
  };
} catch (error) {
  console.error(error);
}
---

{
  // If the gallery exists
  lowerContent?.gallery ? (
    // Then map the images in the gallery
    <article>
      <div class="grid">
        {lowerContent?.gallery.map((image) => (
          <div class="grid-item">
            <img
              class="gallery-image"
              src={`${image.fields.file.url}?fm=webp&h=540&q=55`}
            />
          </div>
        ))}
      </div>
    </article>
  ) : (
    // If it doesn't exist, then show the article content
    <article set:html={lowerContent?.content ? lowerContent?.content : ''} />
  )
}

<script>
  import Masonry from 'masonry-layout';
  import ImagesLoaded from 'imagesloaded';

  ImagesLoaded('.grid', function () {
    const msnry = new Masonry('.grid', {
      itemSelector: '.grid-item',
      gutter: 10,
      fitWidth: true,
    });
  });
</script>

<style>
  .grid {
    margin: 0 auto;
  }
  .grid-item {
    width: 15vw;
    height: auto;
  }

  .grid-item img {
    width: 100%;
    border-radius: 3px;
  }

  article {
    display: block;
    top: 100vh;
    align-items: center;
    margin: 5px;
    padding: 10px;
  }

  p {
    text-align: justify;
  }

  .headerText {
    display: flex;
    position: absolute;
    flex-direction: column;
    z-index: 1;
    color: white;
    bottom: 0;
    margin: 35px;
  }
</style>
