---
import { Image } from 'astro:assets';
import Layout from '../../layouts/Layout.astro';
import { contentfulClient } from '../../lib/contentful';
import type { Project } from '../../lib/contentful';
import { documentToHtmlString } from '@contentful/rich-text-html-renderer';
import { BLOCKS } from '@contentful/rich-text-types';
import Grid from '../../layouts/Grid.astro';

let project;
const { slug } = Astro.params;

const options = {
  preserveWhitespace: true,
  renderNode: {
    // Render the embedded images with all the custom styling options
    [BLOCKS.EMBEDDED_ASSET]: ({
      data: {
        target: { fields },
      },
    }) =>
      `<img data-aos="fade-up" class="blurry-load" style="margin: 10px 10px 10px 0px; border-radius: 3px;" src="https://${fields.file.url}?fm=webp&w=10&h=10&q=5" data-large=https://${fields.file.url}?fm=webp&w=1920&h=1080&q=35&fit=pad width="40%" height="auto" alt="${fields.description}"/>`,
    // Render the text of the paragraph in a justified way
    [BLOCKS.PARAGRAPH]: (node, next) =>
      `<p style="text-align: justify";>${next(node.content)}</p>`,
  },
};

try {
  const data = await contentfulClient.getEntries<Project>({
    content_type: 'project',
    'fields.slug': slug,
  });
  const { title, date, image, content, gallery } = data.items[0].fields;
  project = {
    title,
    date: new Date(date).toLocaleDateString(),
    image: image.fields.file.url,
    content: documentToHtmlString(content, options),
    gallery: data.items[0].fields.gallery,
  };
} catch (error) {
  console.error(error);
}
---

<Layout>
  <div class="headerText">
    <h1>{project?.title}</h1>
    <!-- if the date is returned as "invalid date don't show it" -->
    <h2>{project?.date !== 'Invalid Date' && project?.date}</h2>
  </div>
  <Image
    class="blurry-load top-image"
    alt=""
    width={100}
    height={100}
    loading="eager"
    data-large=`${project?.image}?fm=webp&w=1920&h=1080&q=50`
    src=`${project?.image}?fm=jpg&fl=progressive&w=500&h=500&q=5`
  />
  <center>
    {
      // If the gallery exists
      project?.gallery ? (
        // Then map the images in the gallery
        <article>
          <Grid>
            {/* Map the landscape orientation images */}
            {project?.gallery
              .filter(
                (image) =>
                  image.fields.file.details.image.width >
                  image.fields.file.details.image.height
              )
              .map((image) => (
                <Image
                  data-aos="fade-up"
                  class="blurry-load gallery-image"
                  alt=""
                  width={100}
                  height={100}
                  loading="lazy"
                  data-large={`https:${image.fields.file.url}?fm=webp&w=1920&h=1080&q=35&fit=fill`}
                  src={`https:${image.fields.file.url}?fm=webp&w=480&h=270&q=2&fit=fill`}
                  aspect-ratio="3/2"
                />
              ))}
            {/* Map the portrait orientation images */}

            {project?.gallery
              .filter(
                (image) =>
                  image.fields.file.details.image.width <
                  image.fields.file.details.image.height
              )
              .map((image) => (
                <Image
                  data-aos="fade-up"
                  class="blurry-load gallery-image"
                  alt=""
                  width={image.fields.file.details.image.width}
                  height={image.fields.file.details.image.height}
                  loading="lazy"
                  data-large={`https:${image.fields.file.url}?fm=webp&w=1920&h=1080&q=35&fit=pad`}
                  src={`https:${image.fields.file.url}?fm=webp&w=270&h=480&q=2&fit=pad`}
                  aspect-ratio="2/3"
                />
              ))}
          </Grid>
        </article>
      ) : (
        // If it doesn't exist, then show the article content
        <article set:html={project?.content ? project?.content : ''} />
      )
    }
  </center>

  <style>
    .top-image {
      width: 100vw;
      height: 100vh;
      z-index: 0;
      position: absolute;
      top: 0;
      left: 0;
    }

    .gallery-image {
      width: 100%;
      height: auto;
      margin: 5px;
      border-radius: 3px;
    }
    article {
      display: block;
      position: absolute;
      top: 105vh;
      align-items: center;
      margin: 5px;
      padding: 10px;
    }

    p {
      text-align: justify;
    }

    .headerText {
      display: flex;
      position: absolute;
      flex-direction: column;
      z-index: 1;
      color: white;
      bottom: 0;
    }
  </style>
</Layout>
